
DEBUG: actin_density = 0.33
Creating actin network..DEBUG: Number of filament:3
DEBUG: Number of monomers per filament:11
DEBUG: Monomer Length:0.5

Adding active motors...
DEBUG: Number of motors:5
Adding passive motors (crosslinkers) ...

DEBUG: Number of motors:5

Updating motors, filaments and crosslinks in the network..
DEBUG: time of pre_strain = 0
DEBUG: t = 0; adding pre_strain of 0 um here
Time counts: 0
All Fs	:	KE = 0	PEs = 0	PEb = 0	TE = 0
All Motors	:	KE = 0	PEs = 0	PEb = 0	TE = 0
All Motors	:	KE = 0	PEs = 0	PEb = 0	TE = 0
Time counts: 1
All Fs	:	KE = 3.89628	PEs = 1.83772e-30	PEb = 0.00627059	TE = 3.90255
All Motors	:	KE = 0	PEs = 0.000464572	PEb = 0	TE = 0.000464572
All Motors	:	KE = 0	PEs = 8.37123e-05	PEb = 0	TE = 8.37123e-05
Time counts: 2
All Fs	:	KE = -2.24504	PEs = 0.00558279	PEb = 0.00765378	TE = -2.2318
All Motors	:	KE = 0.00215924	PEs = 0.00171665	PEb = 0	TE = 0.00387589
All Motors	:	KE = 0.00239756	PEs = 0.000634078	PEb = 0	TE = 0.00303164
Time counts: 3
All Fs	:	KE = -4.24147	PEs = 0.013323	PEb = 0.00962764	TE = -4.21852
All Motors	:	KE = 0.00773752	PEs = 0.00220013	PEb = 0	TE = 0.00993765
All Motors	:	KE = 0.0113758	PEs = 0.00120267	PEb = 0	TE = 0.0125785
Time counts: 4
All Fs	:	KE = -2.96639	PEs = 0.0170507	PEb = 0.012294	TE = -2.93705
All Motors	:	KE = 0.0128027	PEs = 0.00566177	PEb = 0	TE = 0.0184645
All Motors	:	KE = 0.0265039	PEs = 0.00122485	PEb = 0	TE = 0.0277288
Time counts: 5
All Fs	:	KE = -0.203243	PEs = 0.0249009	PEb = 0.0148526	TE = -0.16349
All Motors	:	KE = 0.0196693	PEs = 0.00706543	PEb = 0	TE = 0.0267347
All Motors	:	KE = 0.0398301	PEs = 0.00133292	PEb = 0	TE = 0.041163
Time counts: 6
All Fs	:	KE = -0.876588	PEs = 0.0338802	PEb = 0.0170412	TE = -0.825667
All Motors	:	KE = 0.0272178	PEs = 0.00398659	PEb = 0	TE = 0.0312044
All Motors	:	KE = 0.0507203	PEs = 0.0021485	PEb = 0	TE = 0.0528688
Time counts: 7
All Fs	:	KE = -6.52332	PEs = 0.044272	PEb = 0.0705621	TE = -6.40849
All Motors	:	KE = 0.0308185	PEs = 0.00379546	PEb = 0	TE = 0.034614
All Motors	:	KE = 0.0656579	PEs = 0.00278172	PEb = 0	TE = 0.0684397
Time counts: 8
All Fs	:	KE = 5.04689	PEs = 0.132633	PEb = 0.0693285	TE = 5.24885
All Motors	:	KE = 0.0332943	PEs = 0.00579472	PEb = 0	TE = 0.039089
All Motors	:	KE = 0.0817806	PEs = 0.00374104	PEb = 0	TE = 0.0855217
Time counts: 9
All Fs	:	KE = -0.185155	PEs = 0.122208	PEb = 0.0663715	TE = 0.00342415
All Motors	:	KE = 0.032708	PEs = 0.00776508	PEb = 0	TE = 0.0404731
All Motors	:	KE = 0.104776	PEs = 0.00545912	PEb = 0	TE = 0.110235
Time counts: 10
All Fs	:	KE = 1.4868	PEs = 0.11198	PEb = 0.0650261	TE = 1.66381
All Motors	:	KE = 0.028376	PEs = 0.00706066	PEb = 0	TE = 0.0354366
All Motors	:	KE = 0.140806	PEs = 0.00535865	PEb = 0	TE = 0.146164
Time counts: 11
All Fs	:	KE = -0.303097	PEs = 0.10983	PEb = 0.0651343	TE = -0.128132
All Motors	:	KE = 0.0205235	PEs = 0.00546959	PEb = 0	TE = 0.0259931
All Motors	:	KE = 0.174057	PEs = 0.00471212	PEb = 0	TE = 0.178769
Time counts: 12
All Fs	:	KE = -1.14508	PEs = 0.107733	PEb = 0.0646573	TE = -0.972687
All Motors	:	KE = 0.0122839	PEs = 0.00369464	PEb = 0	TE = 0.0159785
All Motors	:	KE = 0.198738	PEs = 0.00427087	PEb = 0	TE = 0.203009
Time counts: 13
All Fs	:	KE = 1.21469	PEs = 0.110535	PEb = 0.0662378	TE = 1.39146
All Motors	:	KE = 0.00727103	PEs = 0.00226337	PEb = 0	TE = 0.00953439
All Motors	:	KE = 0.224261	PEs = 0.00506212	PEb = 0	TE = 0.229323
Time counts: 14
All Fs	:	KE = -2.07587	PEs = 0.118004	PEb = 0.0673188	TE = -1.89055
All Motors	:	KE = 0.00480583	PEs = 0.00139688	PEb = 0	TE = 0.00620271
All Motors	:	KE = 0.257385	PEs = 0.00746462	PEb = 0	TE = 0.26485
Time counts: 15
All Fs	:	KE = -10.6247	PEs = 0.118841	PEb = 0.0676974	TE = -10.4381
All Motors	:	KE = 0.0040935	PEs = 0.00143814	PEb = 0	TE = 0.00553164
All Motors	:	KE = 0.302078	PEs = 0.00837465	PEb = 0	TE = 0.310452
Time counts: 16
All Fs	:	KE = -8.02024	PEs = 0.123052	PEb = 0.0702261	TE = -7.82697
All Motors	:	KE = 0.00454506	PEs = 0.000863938	PEb = 0	TE = 0.005409
All Motors	:	KE = 0.348453	PEs = 0.00647352	PEb = 0	TE = 0.354926
Time counts: 17
All Fs	:	KE = -0.0143703	PEs = 0.128136	PEb = 0.0717285	TE = 0.185494
All Motors	:	KE = 0.00497253	PEs = 0.00158372	PEb = 0	TE = 0.00655625
All Motors	:	KE = 0.389077	PEs = 0.00711526	PEb = 0	TE = 0.396193
Time counts: 18
All Fs	:	KE = 0.297802	PEs = 0.128505	PEb = 0.0736311	TE = 0.499938
All Motors	:	KE = 0.00471564	PEs = 0.00103407	PEb = 0	TE = 0.00574971
All Motors	:	KE = 0.437528	PEs = 0.00982453	PEb = 0	TE = 0.447352
Time counts: 19
All Fs	:	KE = -5.33248	PEs = 0.134728	PEb = 0.0748919	TE = -5.12286
All Motors	:	KE = 0.00206941	PEs = 0.000989386	PEb = 0	TE = 0.0030588
All Motors	:	KE = 0.494402	PEs = 0.0111856	PEb = 0	TE = 0.505588
Time counts: 20
All Fs	:	KE = -1.04216	PEs = 0.139625	PEb = 0.0746969	TE = -0.827843
All Motors	:	KE = -0.000871983	PEs = 0.000890575	PEb = 0	TE = 1.85929e-05
All Motors	:	KE = 0.553097	PEs = 0.0110301	PEb = 0	TE = 0.564127
Time counts: 21
All Fs	:	KE = -1.05975	PEs = 0.134366	PEb = 0.0735234	TE = -0.851857
All Motors	:	KE = -0.00469968	PEs = 0.000438545	PEb = 0	TE = -0.00426114
All Motors	:	KE = 0.611594	PEs = 0.0107285	PEb = 0	TE = 0.622322
Time counts: 22
All Fs	:	KE = -3.12746	PEs = 0.136783	PEb = 0.0707291	TE = -2.91995
All Motors	:	KE = -0.00821087	PEs = 0.000725312	PEb = 0	TE = -0.00748556
All Motors	:	KE = 0.667603	PEs = 0.0109655	PEb = 0	TE = 0.678569
Time counts: 23
All Fs	:	KE = 0.0401309	PEs = 0.133671	PEb = 0.0690439	TE = 0.242846
All Motors	:	KE = -0.00613571	PEs = 0.00184056	PEb = 0	TE = -0.00429516
All Motors	:	KE = 0.72098	PEs = 0.0133292	PEb = 0	TE = 0.734309
Time counts: 24
All Fs	:	KE = 2.87771	PEs = 0.121584	PEb = 0.068291	TE = 3.06759
All Motors	:	KE = 0.000652165	PEs = 0.00198392	PEb = 0	TE = 0.00263609
All Motors	:	KE = 0.77821	PEs = 0.0139483	PEb = 0	TE = 0.792159
Time counts: 25
All Fs	:	KE = 5.04806	PEs = 0.115532	PEb = 0.0695304	TE = 5.23312
All Motors	:	KE = 0.00957937	PEs = 0.00203948	PEb = 0	TE = 0.0116188
All Motors	:	KE = 0.835225	PEs = 0.0129871	PEb = 0	TE = 0.848212
Time counts: 26
All Fs	:	KE = -2.79304	PEs = 0.111642	PEb = 0.0713831	TE = -2.61001
All Motors	:	KE = 0.0203727	PEs = 0.00134272	PEb = 0	TE = 0.0217154
All Motors	:	KE = 0.887008	PEs = 0.011836	PEb = 0	TE = 0.898844
Time counts: 27
All Fs	:	KE = -2.49875	PEs = 0.112925	PEb = 0.0734417	TE = -2.31238
All Motors	:	KE = 0.0283873	PEs = 0.000929681	PEb = 0	TE = 0.029317
All Motors	:	KE = 0.934464	PEs = 0.00874514	PEb = 0	TE = 0.94321
Time counts: 28
All Fs	:	KE = 6.09788	PEs = 0.117922	PEb = 0.0724067	TE = 6.28821
All Motors	:	KE = 0.0348561	PEs = 0.00188541	PEb = 0	TE = 0.0367415
All Motors	:	KE = 0.971472	PEs = 0.00727097	PEb = 0	TE = 0.978743
Time counts: 29
All Fs	:	KE = 2.07165	PEs = 0.118945	PEb = 0.0690045	TE = 2.2596
All Motors	:	KE = 0.0420552	PEs = 0.00345452	PEb = 0	TE = 0.0455097
All Motors	:	KE = 1.00167	PEs = 0.00644029	PEb = 0	TE = 1.00811
Time counts: 30
All Fs	:	KE = -5.17817	PEs = 0.117915	PEb = 0.0678901	TE = -4.99237
All Motors	:	KE = 0.0512508	PEs = 0.00347835	PEb = 0	TE = 0.0547292
All Motors	:	KE = 1.02649	PEs = 0.00512663	PEb = 0	TE = 1.03162
Time counts: 31
All Fs	:	KE = -2.27567	PEs = 0.114616	PEb = 0.0662276	TE = -2.09483
All Motors	:	KE = 0.0617148	PEs = 0.0054106	PEb = 0	TE = 0.0671254
All Motors	:	KE = 1.0454	PEs = 0.00528536	PEb = 0	TE = 1.05068
Time counts: 32
All Fs	:	KE = -0.499706	PEs = 0.107256	PEb = 0.0627451	TE = -0.329705
All Motors	:	KE = 0.0773558	PEs = 0.00811182	PEb = 0	TE = 0.0854676
All Motors	:	KE = 1.06509	PEs = 0.00450484	PEb = 0	TE = 1.0696
Time counts: 33
All Fs	:	KE = 9.44341	PEs = 0.100089	PEb = 0.0617433	TE = 9.60524
All Motors	:	KE = 0.0983304	PEs = 0.0103822	PEb = 0	TE = 0.108713
All Motors	:	KE = 1.08955	PEs = 0.00317676	PEb = 0	TE = 1.09273
Time counts: 34
All Fs	:	KE = 10.9994	PEs = 0.0896043	PEb = 0.0598967	TE = 11.149
All Motors	:	KE = 0.123936	PEs = 0.0118796	PEb = 0	TE = 0.135815
All Motors	:	KE = 1.11301	PEs = 0.00338068	PEb = 0	TE = 1.1164
Time counts: 35
All Fs	:	KE = 7.55149	PEs = 0.0824834	PEb = 0.0561964	TE = 7.69017
All Motors	:	KE = 0.156232	PEs = 0.0137519	PEb = 0	TE = 0.169983
All Motors	:	KE = 1.13163	PEs = 0.00415035	PEb = 0	TE = 1.13578
Time counts: 36
All Fs	:	KE = 5.53766	PEs = 0.0810199	PEb = 0.0567508	TE = 5.67543
All Motors	:	KE = 0.190917	PEs = 0.0150622	PEb = 0	TE = 0.205979
All Motors	:	KE = 1.14487	PEs = 0.00492965	PEb = 0	TE = 1.1498
Time counts: 37
All Fs	:	KE = -2.99549	PEs = 0.0794213	PEb = 0.0590395	TE = -2.85703
All Motors	:	KE = 0.222487	PEs = 0.0162369	PEb = 0	TE = 0.238724
All Motors	:	KE = 1.15607	PEs = 0.00573032	PEb = 0	TE = 1.1618
Time counts: 38
All Fs	:	KE = 4.3689	PEs = 0.0765715	PEb = 0.0587837	TE = 4.50425
All Motors	:	KE = 0.25293	PEs = 0.0191104	PEb = 0	TE = 0.272041
All Motors	:	KE = 1.16911	PEs = 0.00620478	PEb = 0	TE = 1.17531
Time counts: 39
All Fs	:	KE = 8.97806	PEs = 0.0724741	PEb = 0.0583294	TE = 9.10887
All Motors	:	KE = 0.289804	PEs = 0.0213791	PEb = 0	TE = 0.311183
All Motors	:	KE = 1.18329	PEs = 0.00645173	PEb = 0	TE = 1.18974
Time counts: 40
All Fs	:	KE = 6.28194	PEs = 0.0752082	PEb = 0.0584622	TE = 6.41561
All Motors	:	KE = 0.332275	PEs = 0.0225774	PEb = 0	TE = 0.354852
All Motors	:	KE = 1.1921	PEs = 0.00576793	PEb = 0	TE = 1.19787
Time counts: 41
All Fs	:	KE = 1.30056	PEs = 0.0797672	PEb = 0.0593445	TE = 1.43967
All Motors	:	KE = 0.378101	PEs = 0.0224022	PEb = 0	TE = 0.400503
All Motors	:	KE = 1.19408	PEs = 0.00605567	PEb = 0	TE = 1.20013
Time counts: 42
All Fs	:	KE = -10.7578	PEs = 0.0741961	PEb = 0.0571309	TE = -10.6264
All Motors	:	KE = 0.426114	PEs = 0.0182742	PEb = 0	TE = 0.444388
All Motors	:	KE = 1.19815	PEs = 0.00611265	PEb = 0	TE = 1.20426
Time counts: 43
All Fs	:	KE = -7.42222	PEs = 0.070273	PEb = 0.0530275	TE = -7.29892
All Motors	:	KE = 0.466815	PEs = 0.0200828	PEb = 0	TE = 0.486898
All Motors	:	KE = 1.20116	PEs = 0.00655996	PEb = 0	TE = 1.20772
Time counts: 44
All Fs	:	KE = 6.84757	PEs = 0.0710869	PEb = 0.05162	TE = 6.97028
All Motors	:	KE = 0.508768	PEs = 0.0232929	PEb = 0	TE = 0.532061
All Motors	:	KE = 1.19702	PEs = 0.00952701	PEb = 0	TE = 1.20655
Time counts: 45
All Fs	:	KE = 9.27822	PEs = 0.0707302	PEb = 0.052107	TE = 9.40106
All Motors	:	KE = 0.557322	PEs = 0.0229956	PEb = 0	TE = 0.580318
All Motors	:	KE = 1.18803	PEs = 0.0121945	PEb = 0	TE = 1.20022
Time counts: 46
All Fs	:	KE = 13.2457	PEs = 0.0688814	PEb = 0.0535852	TE = 13.3681
All Motors	:	KE = 0.604918	PEs = 0.0214605	PEb = 0	TE = 0.626379
All Motors	:	KE = 1.18489	PEs = 0.013132	PEb = 0	TE = 1.19802
Time counts: 47
All Fs	:	KE = 4.73903	PEs = 0.0660329	PEb = 0.0547252	TE = 4.85979
All Motors	:	KE = 0.647021	PEs = 0.0195455	PEb = 0	TE = 0.666566
All Motors	:	KE = 1.1898	PEs = 0.0124546	PEb = 0	TE = 1.20226
Time counts: 48
All Fs	:	KE = -2.04294	PEs = 0.0658258	PEb = 0.0544601	TE = -1.92266
All Motors	:	KE = 0.686939	PEs = 0.0167796	PEb = 0	TE = 0.703719
All Motors	:	KE = 1.1873	PEs = 0.0134097	PEb = 0	TE = 1.20071
Time counts: 49
All Fs	:	KE = -3.50433	PEs = 0.06321	PEb = 0.0547884	TE = -3.38633
All Motors	:	KE = 0.723633	PEs = 0.0126399	PEb = 0	TE = 0.736273
All Motors	:	KE = 1.18304	PEs = 0.0163975	PEb = 0	TE = 1.19944
Time counts: 50
All Fs	:	KE = 4.48299	PEs = 0.0587813	PEb = 0.0544351	TE = 4.59621
All Motors	:	KE = 0.753477	PEs = 0.0133613	PEb = 0	TE = 0.766838
All Motors	:	KE = 1.18832	PEs = 0.0171433	PEb = 0	TE = 1.20547
Time counts: 51
All Fs	:	KE = 5.11128	PEs = 0.0555173	PEb = 0.0545938	TE = 5.22139
All Motors	:	KE = 0.78432	PEs = 0.0179069	PEb = 0	TE = 0.802226
All Motors	:	KE = 1.19657	PEs = 0.0150521	PEb = 0	TE = 1.21162
Time counts: 52
All Fs	:	KE = -6.33581	PEs = 0.0551339	PEb = 0.0568986	TE = -6.22377
All Motors	:	KE = 0.822173	PEs = 0.019625	PEb = 0	TE = 0.841798
All Motors	:	KE = 1.20327	PEs = 0.0112798	PEb = 0	TE = 1.21455
Time counts: 53
All Fs	:	KE = -4.107	PEs = 0.0565096	PEb = 0.0567222	TE = -3.99377
All Motors	:	KE = 0.863711	PEs = 0.0174688	PEb = 0	TE = 0.88118
All Motors	:	KE = 1.20971	PEs = 0.00889173	PEb = 0	TE = 1.21861
Time counts: 54
All Fs	:	KE = -2.64258	PEs = 0.0633292	PEb = 0.0568217	TE = -2.52243
All Motors	:	KE = 0.901378	PEs = 0.0164361	PEb = 0	TE = 0.917815
All Motors	:	KE = 1.21514	PEs = 0.00907922	PEb = 0	TE = 1.22422
Time counts: 55
All Fs	:	KE = -5.32575	PEs = 0.0646273	PEb = 0.0589123	TE = -5.20221
All Motors	:	KE = 0.936221	PEs = 0.0134494	PEb = 0	TE = 0.949671
All Motors	:	KE = 1.22297	PEs = 0.0100292	PEb = 0	TE = 1.233
Time counts: 56
All Fs	:	KE = -5.54483	PEs = 0.0649785	PEb = 0.0601029	TE = -5.41975
All Motors	:	KE = 0.96619	PEs = 0.0095547	PEb = 0	TE = 0.975745
All Motors	:	KE = 1.24031	PEs = 0.0117576	PEb = 0	TE = 1.25207
Time counts: 57
All Fs	:	KE = -3.80083	PEs = 0.0657376	PEb = 0.0598174	TE = -3.67527
All Motors	:	KE = 0.983225	PEs = 0.0107923	PEb = 0	TE = 0.994018
All Motors	:	KE = 1.26566	PEs = 0.0105044	PEb = 0	TE = 1.27616
Time counts: 58
All Fs	:	KE = -7.80136	PEs = 0.0674386	PEb = 0.0575876	TE = -7.67634
All Motors	:	KE = 0.999653	PEs = 0.0127729	PEb = 0	TE = 1.01243
All Motors	:	KE = 1.2874	PEs = 0.00781613	PEb = 0	TE = 1.29522
Time counts: 59
All Fs	:	KE = -0.170197	PEs = 0.0673403	PEb = 0.0563824	TE = -0.0464743
All Motors	:	KE = 1.02186	PEs = 0.013637	PEb = 0	TE = 1.0355
All Motors	:	KE = 1.2986	PEs = 0.00962625	PEb = 0	TE = 1.30823
Time counts: 60
All Fs	:	KE = 1.35733	PEs = 0.0653909	PEb = 0.0569227	TE = 1.47964
All Motors	:	KE = 1.04258	PEs = 0.0158009	PEb = 0	TE = 1.05839
All Motors	:	KE = 1.3024	PEs = 0.0135387	PEb = 0	TE = 1.31594
Time counts: 61
All Fs	:	KE = -8.24407	PEs = 0.0627265	PEb = 0.0573968	TE = -8.12395
All Motors	:	KE = 1.06491	PEs = 0.0175074	PEb = 0	TE = 1.08242
All Motors	:	KE = 1.30008	PEs = 0.015913	PEb = 0	TE = 1.31599
Time counts: 62
All Fs	:	KE = -10.3447	PEs = 0.059781	PEb = 0.0561469	TE = -10.2288
All Motors	:	KE = 1.08648	PEs = 0.0213843	PEb = 0	TE = 1.10786
All Motors	:	KE = 1.29297	PEs = 0.016926	PEb = 0	TE = 1.3099
Time counts: 63
All Fs	:	KE = -5.21703	PEs = 0.0631837	PEb = 0.0539554	TE = -5.09989
All Motors	:	KE = 1.1114	PEs = 0.0196013	PEb = 0	TE = 1.131
All Motors	:	KE = 1.28369	PEs = 0.0188176	PEb = 0	TE = 1.30251
Time counts: 64
All Fs	:	KE = 9.67143	PEs = 0.0652956	PEb = 0.0522441	TE = 9.78897
All Motors	:	KE = 1.13777	PEs = 0.0175027	PEb = 0	TE = 1.15528
All Motors	:	KE = 1.27092	PEs = 0.0225452	PEb = 0	TE = 1.29347
Time counts: 65
All Fs	:	KE = 5.97519	PEs = 0.0649787	PEb = 0.0510721	TE = 6.09124
All Motors	:	KE = 1.16413	PEs = 0.0159311	PEb = 0	TE = 1.18006
All Motors	:	KE = 1.2587	PEs = 0.0234183	PEb = 0	TE = 1.28212
Time counts: 66
All Fs	:	KE = -9.12726	PEs = 0.0675952	PEb = 0.0491564	TE = -9.01051
All Motors	:	KE = 1.19265	PEs = 0.0151182	PEb = 0	TE = 1.20776
All Motors	:	KE = 1.24662	PEs = 0.0220712	PEb = 0	TE = 1.2687
Time counts: 67
All Fs	:	KE = -8.68111	PEs = 0.0707256	PEb = 0.0479201	TE = -8.56247
All Motors	:	KE = 1.22245	PEs = 0.0149796	PEb = 0	TE = 1.23743
All Motors	:	KE = 1.23397	PEs = 0.021651	PEb = 0	TE = 1.25563
Time counts: 68
All Fs	:	KE = 0.168051	PEs = 0.0705796	PEb = 0.0493893	TE = 0.28802
All Motors	:	KE = 1.25376	PEs = 0.0124824	PEb = 0	TE = 1.26624
All Motors	:	KE = 1.23028	PEs = 0.0226685	PEb = 0	TE = 1.25295
Time counts: 69
All Fs	:	KE = 2.2497	PEs = 0.0696472	PEb = 0.0516761	TE = 2.37102
All Motors	:	KE = 1.28034	PEs = 0.0128109	PEb = 0	TE = 1.29315
All Motors	:	KE = 1.2379	PEs = 0.022995	PEb = 0	TE = 1.26089
Time counts: 70
All Fs	:	KE = 8.81488	PEs = 0.067912	PEb = 0.0522681	TE = 8.93506
All Motors	:	KE = 1.30417	PEs = 0.014951	PEb = 0	TE = 1.31912
All Motors	:	KE = 1.24516	PEs = 0.0229207	PEb = 0	TE = 1.26808
Time counts: 71
All Fs	:	KE = 8.06447	PEs = 0.0596871	PEb = 0.0519959	TE = 8.17616
All Motors	:	KE = 1.32766	PEs = 0.0133869	PEb = 0	TE = 1.34104
All Motors	:	KE = 1.24883	PEs = 0.0210513	PEb = 0	TE = 1.26988
Time counts: 72
All Fs	:	KE = -1.40705	PEs = 0.0558162	PEb = 0.0519598	TE = -1.29928
All Motors	:	KE = 1.34971	PEs = 0.01314	PEb = 0	TE = 1.36285
All Motors	:	KE = 1.2475	PEs = 0.0199902	PEb = 0	TE = 1.26749
Time counts: 73
All Fs	:	KE = 1.96885	PEs = 0.0561536	PEb = 0.0516089	TE = 2.07661
All Motors	:	KE = 1.37594	PEs = 0.00955988	PEb = 0	TE = 1.3855
All Motors	:	KE = 1.23804	PEs = 0.0204712	PEb = 0	TE = 1.25851
Time counts: 74
All Fs	:	KE = -0.0750751	PEs = 0.0596933	PEb = 0.0507794	TE = 0.0353976
All Motors	:	KE = 1.39943	PEs = 0.00639219	PEb = 0	TE = 1.40582
All Motors	:	KE = 1.22901	PEs = 0.0228227	PEb = 0	TE = 1.25184
Time counts: 75
All Fs	:	KE = -5.72634	PEs = 0.0570698	PEb = 0.0492698	TE = -5.62
All Motors	:	KE = 1.4194	PEs = 0.00805709	PEb = 0	TE = 1.42746
All Motors	:	KE = 1.22276	PEs = 0.0228164	PEb = 0	TE = 1.24558
Time counts: 76
All Fs	:	KE = 0.723996	PEs = 0.063583	PEb = 0.0487358	TE = 0.836315
All Motors	:	KE = 1.44146	PEs = 0.00647909	PEb = 0	TE = 1.44794
All Motors	:	KE = 1.21562	PEs = 0.022736	PEb = 0	TE = 1.23835
Time counts: 77
All Fs	:	KE = 4.10704	PEs = 0.0682342	PEb = 0.0488616	TE = 4.22414
All Motors	:	KE = 1.46007	PEs = 0.00628902	PEb = 0	TE = 1.46636
All Motors	:	KE = 1.20973	PEs = 0.0228926	PEb = 0	TE = 1.23263
Time counts: 78
All Fs	:	KE = -4.11811	PEs = 0.0685306	PEb = 0.047647	TE = -4.00194
All Motors	:	KE = 1.47474	PEs = 0.00574315	PEb = 0	TE = 1.48048
All Motors	:	KE = 1.20301	PEs = 0.0199515	PEb = 0	TE = 1.22296
Time counts: 79
All Fs	:	KE = -2.81822	PEs = 0.0641932	PEb = 0.0475083	TE = -2.70652
All Motors	:	KE = 1.48789	PEs = 0.00604159	PEb = 0	TE = 1.49393
All Motors	:	KE = 1.19818	PEs = 0.0167454	PEb = 0	TE = 1.21493
Time counts: 80
All Fs	:	KE = 4.21332	PEs = 0.0611656	PEb = 0.0469252	TE = 4.32141
All Motors	:	KE = 1.50485	PEs = 0.00569536	PEb = 0	TE = 1.51054
All Motors	:	KE = 1.19375	PEs = 0.014352	PEb = 0	TE = 1.20811
Time counts: 81
All Fs	:	KE = 5.50574	PEs = 0.0633263	PEb = 0.0450566	TE = 5.61412
All Motors	:	KE = 1.52034	PEs = 0.00554492	PEb = 0	TE = 1.52588
All Motors	:	KE = 1.19329	PEs = 0.0138905	PEb = 0	TE = 1.20718
Time counts: 82
All Fs	:	KE = -0.147704	PEs = 0.0640712	PEb = 0.0431553	TE = -0.0404771
All Motors	:	KE = 1.53335	PEs = 0.0061514	PEb = 0	TE = 1.5395
All Motors	:	KE = 1.19776	PEs = 0.0121651	PEb = 0	TE = 1.20992
Time counts: 83
All Fs	:	KE = -5.09843	PEs = 0.0600359	PEb = 0.04065	TE = -4.99774
All Motors	:	KE = 1.54562	PEs = 0.00456169	PEb = 0	TE = 1.55019
All Motors	:	KE = 1.20017	PEs = 0.0115719	PEb = 0	TE = 1.21174
Time counts: 84
All Fs	:	KE = -2.47362	PEs = 0.0547936	PEb = 0.0406242	TE = -2.3782
All Motors	:	KE = 1.55397	PEs = 0.00338201	PEb = 0	TE = 1.55735
All Motors	:	KE = 1.20448	PEs = 0.0130025	PEb = 0	TE = 1.21748
Time counts: 85
All Fs	:	KE = -1.38131	PEs = 0.0526129	PEb = 0.0419436	TE = -1.28676
All Motors	:	KE = 1.56492	PEs = 0.00325739	PEb = 0	TE = 1.56818
All Motors	:	KE = 1.20678	PEs = 0.0148161	PEb = 0	TE = 1.2216
Time counts: 86
All Fs	:	KE = -4.52903	PEs = 0.0553804	PEb = 0.0424395	TE = -4.43121
All Motors	:	KE = 1.57957	PEs = 0.00467043	PEb = 0	TE = 1.58424
All Motors	:	KE = 1.20681	PEs = 0.0183017	PEb = 0	TE = 1.22512
Time counts: 87
All Fs	:	KE = -9.99458	PEs = 0.0540494	PEb = 0.0426715	TE = -9.89785
All Motors	:	KE = 1.59768	PEs = 0.00531932	PEb = 0	TE = 1.60299
All Motors	:	KE = 1.2064	PEs = 0.0228995	PEb = 0	TE = 1.2293
Time counts: 88
All Fs	:	KE = -1.99672	PEs = 0.0509518	PEb = 0.0420871	TE = -1.90368
All Motors	:	KE = 1.61609	PEs = 0.00503698	PEb = 0	TE = 1.62113
All Motors	:	KE = 1.20935	PEs = 0.0215784	PEb = 0	TE = 1.23093
Time counts: 89
All Fs	:	KE = 13.1171	PEs = 0.0522636	PEb = 0.0411629	TE = 13.2105
All Motors	:	KE = 1.63103	PEs = 0.00808268	PEb = 0	TE = 1.63911
All Motors	:	KE = 1.21678	PEs = 0.0189445	PEb = 0	TE = 1.23572
Time counts: 90
All Fs	:	KE = 8.11599	PEs = 0.0538144	PEb = 0.0419744	TE = 8.21178
All Motors	:	KE = 1.64631	PEs = 0.00863505	PEb = 0	TE = 1.65495
All Motors	:	KE = 1.22292	PEs = 0.020726	PEb = 0	TE = 1.24364
Time counts: 91
All Fs	:	KE = -1.74774	PEs = 0.0540881	PEb = 0.0435302	TE = -1.65012
All Motors	:	KE = 1.65808	PEs = 0.00639333	PEb = 0	TE = 1.66448
All Motors	:	KE = 1.22955	PEs = 0.0222663	PEb = 0	TE = 1.25181
Time counts: 92
All Fs	:	KE = -5.24217	PEs = 0.054248	PEb = 0.0438739	TE = -5.14405
All Motors	:	KE = 1.671	PEs = 0.00825932	PEb = 0	TE = 1.67926
All Motors	:	KE = 1.23792	PEs = 0.0216255	PEb = 0	TE = 1.25954
Time counts: 93
All Fs	:	KE = -7.28428	PEs = 0.0522285	PEb = 0.0438544	TE = -7.1882
All Motors	:	KE = 1.69136	PEs = 0.0105049	PEb = 0	TE = 1.70187
All Motors	:	KE = 1.24769	PEs = 0.0210483	PEb = 0	TE = 1.26873
Time counts: 94
All Fs	:	KE = -11.8646	PEs = 0.0541023	PEb = 0.0442947	TE = -11.7662
All Motors	:	KE = 1.71722	PEs = 0.00879021	PEb = 0	TE = 1.72601
All Motors	:	KE = 1.2649	PEs = 0.0205652	PEb = 0	TE = 1.28547
Time counts: 95
All Fs	:	KE = -11.1956	PEs = 0.0504288	PEb = 0.0450039	TE = -11.1001
All Motors	:	KE = 1.74224	PEs = 0.0110838	PEb = 0	TE = 1.75332
All Motors	:	KE = 1.28889	PEs = 0.0191085	PEb = 0	TE = 1.308
Time counts: 96
All Fs	:	KE = 4.73499	PEs = 0.0460894	PEb = 0.0451139	TE = 4.8262
All Motors	:	KE = 1.77036	PEs = 0.0149909	PEb = 0	TE = 1.78535
All Motors	:	KE = 1.31632	PEs = 0.0186786	PEb = 0	TE = 1.335
Time counts: 97
All Fs	:	KE = 6.58825	PEs = 0.0452279	PEb = 0.0444832	TE = 6.67796
All Motors	:	KE = 1.80201	PEs = 0.0185523	PEb = 0	TE = 1.82056
All Motors	:	KE = 1.346	PEs = 0.0191308	PEb = 0	TE = 1.36513
Time counts: 98
All Fs	:	KE = 2.1859	PEs = 0.0471422	PEb = 0.0439346	TE = 2.27698
All Motors	:	KE = 1.83387	PEs = 0.0206339	PEb = 0	TE = 1.85451
All Motors	:	KE = 1.3741	PEs = 0.0181008	PEb = 0	TE = 1.3922
Time counts: 99
All Fs	:	KE = 2.12379	PEs = 0.0467886	PEb = 0.045516	TE = 2.21609
All Motors	:	KE = 1.86719	PEs = 0.0215224	PEb = 0	TE = 1.88871
All Motors	:	KE = 1.40204	PEs = 0.0174311	PEb = 0	TE = 1.41947
Time counts: 100
All Fs	:	KE = -1.58344	PEs = 0.0454829	PEb = 0.0478116	TE = -1.49014
All Motors	:	KE = 1.90488	PEs = 0.0286952	PEb = 0	TE = 1.93358
All Motors	:	KE = 1.43033	PEs = 0.0168136	PEb = 0	TE = 1.44714
Here's where I think I delete things
DELETING MOTOR ENSEMBLE
DELETING MOTOR ENSEMBLE
DELETING FILAMENT_ENSEMBLE

Time counts: 101
Executed
 Done
Flat profile:

Each sample counts as 0.01 seconds.
 no time accumulated

  %   cumulative   self              self     total           
 time   seconds   seconds    calls  Ts/call  Ts/call  name    
  0.00      0.00     0.00       86     0.00     0.00  boost::any::holder<double>::~holder()
  0.00      0.00     0.00       86     0.00     0.00  boost::any::holder<double>::type() const
  0.00      0.00     0.00       63     0.00     0.00  actin::get_friction()
  0.00      0.00     0.00       43     0.00     0.00  boost::any::holder<double>::clone() const
  0.00      0.00     0.00       18     0.00     0.00  boost::any::holder<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::~holder()
  0.00      0.00     0.00       18     0.00     0.00  boost::any::holder<bool>::~holder()
  0.00      0.00     0.00       18     0.00     0.00  boost::any::holder<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::type() const
  0.00      0.00     0.00       18     0.00     0.00  boost::any::holder<bool>::type() const
  0.00      0.00     0.00       12     0.00     0.00  boost::any::holder<int>::~holder()
  0.00      0.00     0.00       12     0.00     0.00  boost::any::holder<int>::type() const
  0.00      0.00     0.00        9     0.00     0.00  boost::any::holder<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::clone() const
  0.00      0.00     0.00        9     0.00     0.00  boost::any::holder<bool>::clone() const
  0.00      0.00     0.00        6     0.00     0.00  char* boost::detail::lcast_put_unsigned<std::char_traits<char>, unsigned int, char>(unsigned int, char*)
  0.00      0.00     0.00        6     0.00     0.00  boost::any::holder<int>::clone() const
  0.00      0.00     0.00        1     0.00     0.00  _GLOBAL__sub_I_main

 %         the percentage of the total running time of the
time       program used by this function.

cumulative a running sum of the number of seconds accounted
 seconds   for by this function and those listed above it.

 self      the number of seconds accounted for by this
seconds    function alone.  This is the major sort for this
           listing.

calls      the number of times this function was invoked, if
           this function is profiled, else blank.
 
 self      the average number of milliseconds spent in this
ms/call    function per call, if this function is profiled,
	   else blank.

 total     the average number of milliseconds spent in this
ms/call    function and its descendents per call, if this 
	   function is profiled, else blank.

name       the name of the function.  This is the minor sort
           for this listing. The index shows the location of
	   the function in the gprof listing. If the index is
	   in parenthesis it shows where it would appear in
	   the gprof listing if it were to be printed.

Copyright (C) 2012 Free Software Foundation, Inc.

Copying and distribution of this file, with or without modification,
are permitted in any medium without royalty provided the copyright
notice and this notice are preserved.

		     Call graph (explanation follows)


granularity: each sample hit covers 2 byte(s) no time propagated

index % time    self  children    called     name
                0.00    0.00      43/86          boost::program_options::typed_value<double, char>::~typed_value() [228]
                0.00    0.00      43/86          std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, boost::program_options::variable_value>, std::_Select1st<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, boost::program_options::variable_value> >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, boost::program_options::variable_value> > >::_M_erase(std::_Rb_tree_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, boost::program_options::variable_value> >*) [489]
[8]      0.0    0.00    0.00      86         boost::any::holder<double>::~holder() [8]
-----------------------------------------------
                0.00    0.00      86/86          boost::program_options::typed_value<double, char>::notify(boost::any const&) const [428]
[9]      0.0    0.00    0.00      86         boost::any::holder<double>::type() const [9]
-----------------------------------------------
                                 606             actin::get_friction() [10]
                0.00    0.00      10/63          std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*) [507]
                0.00    0.00      18/63          boost::program_options::typed_value<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char>::default_value(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) [219]
                0.00    0.00      35/63          boost::any::holder<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::clone() const [18]
[10]     0.0    0.00    0.00      63+606     actin::get_friction() [10]
                                 606             actin::get_friction() [10]
-----------------------------------------------
                0.00    0.00      43/43          boost::program_options::typed_value<double, char>::apply_default(boost::any&) const [426]
[11]     0.0    0.00    0.00      43         boost::any::holder<double>::clone() const [11]
-----------------------------------------------
                0.00    0.00       9/18          boost::program_options::typed_value<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char>::~typed_value() [220]
                0.00    0.00       9/18          std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, boost::program_options::variable_value>, std::_Select1st<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, boost::program_options::variable_value> >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, boost::program_options::variable_value> > >::_M_erase(std::_Rb_tree_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, boost::program_options::variable_value> >*) [489]
[12]     0.0    0.00    0.00      18         boost::any::holder<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::~holder() [12]
-----------------------------------------------
                0.00    0.00       9/18          boost::program_options::typed_value<bool, char>::~typed_value() [225]
                0.00    0.00       9/18          std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, boost::program_options::variable_value>, std::_Select1st<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, boost::program_options::variable_value> >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, boost::program_options::variable_value> > >::_M_erase(std::_Rb_tree_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, boost::program_options::variable_value> >*) [489]
[13]     0.0    0.00    0.00      18         boost::any::holder<bool>::~holder() [13]
-----------------------------------------------
                0.00    0.00      18/18          boost::program_options::typed_value<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char>::notify(boost::any const&) const [401]
[14]     0.0    0.00    0.00      18         boost::any::holder<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::type() const [14]
-----------------------------------------------
                0.00    0.00      18/18          boost::program_options::typed_value<bool, char>::notify(boost::any const&) const [419]
[15]     0.0    0.00    0.00      18         boost::any::holder<bool>::type() const [15]
-----------------------------------------------
                0.00    0.00       6/12          boost::program_options::typed_value<int, char>::~typed_value() [231]
                0.00    0.00       6/12          std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, boost::program_options::variable_value>, std::_Select1st<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, boost::program_options::variable_value> >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, boost::program_options::variable_value> > >::_M_erase(std::_Rb_tree_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, boost::program_options::variable_value> >*) [489]
[16]     0.0    0.00    0.00      12         boost::any::holder<int>::~holder() [16]
-----------------------------------------------
                0.00    0.00      12/12          boost::program_options::typed_value<int, char>::notify(boost::any const&) const [437]
[17]     0.0    0.00    0.00      12         boost::any::holder<int>::type() const [17]
-----------------------------------------------
                0.00    0.00       9/9           boost::program_options::typed_value<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char>::apply_default(boost::any&) const [399]
[18]     0.0    0.00    0.00       9         boost::any::holder<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::clone() const [18]
                0.00    0.00      35/63          actin::get_friction() [10]
-----------------------------------------------
                0.00    0.00       9/9           boost::program_options::typed_value<bool, char>::apply_default(boost::any&) const [417]
[19]     0.0    0.00    0.00       9         boost::any::holder<bool>::clone() const [19]
-----------------------------------------------
                0.00    0.00       6/6           boost::program_options::typed_value<int, char>::default_value(int const&) [230]
[20]     0.0    0.00    0.00       6         char* boost::detail::lcast_put_unsigned<std::char_traits<char>, unsigned int, char>(unsigned int, char*) [20]
-----------------------------------------------
                0.00    0.00       6/6           boost::program_options::typed_value<int, char>::apply_default(boost::any&) const [435]
[21]     0.0    0.00    0.00       6         boost::any::holder<int>::clone() const [21]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [568]
[22]     0.0    0.00    0.00       1         _GLOBAL__sub_I_main [22]
-----------------------------------------------
                                  67             std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, boost::program_options::variable_value>, std::_Select1st<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, boost::program_options::variable_value> >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, boost::program_options::variable_value> > >::_M_erase(std::_Rb_tree_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, boost::program_options::variable_value> >*) [489]
[489]    0.0    0.00    0.00       0+67      std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, boost::program_options::variable_value>, std::_Select1st<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, boost::program_options::variable_value> >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, boost::program_options::variable_value> > >::_M_erase(std::_Rb_tree_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, boost::program_options::variable_value> >*) [489]
                0.00    0.00      43/86          boost::any::holder<double>::~holder() [8]
                0.00    0.00       9/18          boost::any::holder<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::~holder() [12]
                0.00    0.00       9/18          boost::any::holder<bool>::~holder() [13]
                0.00    0.00       6/12          boost::any::holder<int>::~holder() [16]
                                  67             std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, boost::program_options::variable_value>, std::_Select1st<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, boost::program_options::variable_value> >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, boost::program_options::variable_value> > >::_M_erase(std::_Rb_tree_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, boost::program_options::variable_value> >*) [489]
-----------------------------------------------

 This table describes the call tree of the program, and was sorted by
 the total amount of time spent in each function and its children.

 Each entry in this table consists of several lines.  The line with the
 index number at the left hand margin lists the current function.
 The lines above it list the functions that called this function,
 and the lines below it list the functions this one called.
 This line lists:
     index	A unique number given to each element of the table.
		Index numbers are sorted numerically.
		The index number is printed next to every function name so
		it is easier to look up where the function is in the table.

     % time	This is the percentage of the `total' time that was spent
		in this function and its children.  Note that due to
		different viewpoints, functions excluded by options, etc,
		these numbers will NOT add up to 100%.

     self	This is the total amount of time spent in this function.

     children	This is the total amount of time propagated into this
		function by its children.

     called	This is the number of times the function was called.
		If the function called itself recursively, the number
		only includes non-recursive calls, and is followed by
		a `+' and the number of recursive calls.

     name	The name of the current function.  The index number is
		printed after it.  If the function is a member of a
		cycle, the cycle number is printed between the
		function's name and the index number.


 For the function's parents, the fields have the following meanings:

     self	This is the amount of time that was propagated directly
		from the function into this parent.

     children	This is the amount of time that was propagated from
		the function's children into this parent.

     called	This is the number of times this parent called the
		function `/' the total number of times the function
		was called.  Recursive calls to the function are not
		included in the number after the `/'.

     name	This is the name of the parent.  The parent's index
		number is printed after it.  If the parent is a
		member of a cycle, the cycle number is printed between
		the name and the index number.

 If the parents of the function cannot be determined, the word
 `<spontaneous>' is printed in the `name' field, and all the other
 fields are blank.

 For the function's children, the fields have the following meanings:

     self	This is the amount of time that was propagated directly
		from the child into the function.

     children	This is the amount of time that was propagated from the
		child's children to the function.

     called	This is the number of times the function called
		this child `/' the total number of times the child
		was called.  Recursive calls by the child are not
		listed in the number after the `/'.

     name	This is the name of the child.  The child's index
		number is printed after it.  If the child is a
		member of a cycle, the cycle number is printed
		between the name and the index number.

 If there are any cycles (circles) in the call graph, there is an
 entry for the cycle-as-a-whole.  This entry shows who called the
 cycle (as parents) and the members of the cycle (as children.)
 The `+' recursive calls entry shows the number of function calls that
 were internal to the cycle, and the calls entry for each member shows,
 for that member, how many times it was called from other members of
 the cycle.

Copyright (C) 2012 Free Software Foundation, Inc.

Copying and distribution of this file, with or without modification,
are permitted in any medium without royalty provided the copyright
notice and this notice are preserved.

Index by function name

  [22] _GLOBAL__sub_I_main (network.cpp) [16] boost::any::holder<int>::~holder() [19] boost::any::holder<bool>::clone() const
  [10] actin::get_friction()  [20] char* boost::detail::lcast_put_unsigned<std::char_traits<char>, unsigned int, char>(unsigned int, char*) [9] boost::any::holder<double>::type() const
  [12] boost::any::holder<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::~holder() [14] boost::any::holder<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::type() const [11] boost::any::holder<double>::clone() const
  [13] boost::any::holder<bool>::~holder() [18] boost::any::holder<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::clone() const [17] boost::any::holder<int>::type() const
   [8] boost::any::holder<double>::~holder() [15] boost::any::holder<bool>::type() const [21] boost::any::holder<int>::clone() const
